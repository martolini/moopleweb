# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accounts',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(unique=True, max_length=13)),
                ('password', models.CharField(max_length=128)),
                ('salt', models.CharField(max_length=128, null=True, blank=True)),
                ('pin', models.CharField(max_length=10, null=True, blank=True)),
                ('pic', models.CharField(max_length=26, null=True, blank=True)),
                ('loggedin', models.IntegerField()),
                ('lastlogin', models.DateTimeField(null=True, blank=True)),
                ('createdat', models.DateTimeField()),
                ('birthday', models.DateField()),
                ('banned', models.IntegerField()),
                ('banreason', models.TextField(null=True, blank=True)),
                ('gm', models.IntegerField()),
                ('macs', models.TextField(null=True, blank=True)),
                ('nxcredit', models.IntegerField(null=True, db_column='nxCredit', blank=True)),
                ('maplepoint', models.IntegerField(null=True, db_column='maplePoint', blank=True)),
                ('nxprepaid', models.IntegerField(null=True, db_column='nxPrepaid', blank=True)),
                ('characterslots', models.IntegerField()),
                ('gender', models.IntegerField()),
                ('tempban', models.DateTimeField()),
                ('greason', models.IntegerField()),
                ('tos', models.IntegerField()),
            ],
            options={
                'db_table': 'accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alliance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=13)),
                ('notice', models.CharField(max_length=128)),
                ('capacity', models.IntegerField()),
                ('rank_title1', models.CharField(max_length=45)),
                ('rank_title2', models.CharField(max_length=45)),
                ('rank_title3', models.CharField(max_length=45)),
                ('rank_title4', models.CharField(max_length=45)),
                ('rank_title5', models.CharField(max_length=45)),
                ('guild1', models.IntegerField()),
                ('guild2', models.IntegerField()),
                ('guild3', models.IntegerField()),
                ('guild4', models.IntegerField()),
                ('guild5', models.IntegerField()),
            ],
            options={
                'db_table': 'alliance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('charid', models.IntegerField()),
                ('area', models.IntegerField()),
                ('info', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'area_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BbsReplies',
            fields=[
                ('replyid', models.AutoField(serialize=False, primary_key=True)),
                ('threadid', models.IntegerField()),
                ('postercid', models.IntegerField()),
                ('timestamp', models.BigIntegerField()),
                ('content', models.CharField(max_length=26)),
            ],
            options={
                'db_table': 'bbs_replies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BbsThreads',
            fields=[
                ('threadid', models.AutoField(serialize=False, primary_key=True)),
                ('postercid', models.IntegerField()),
                ('name', models.CharField(max_length=26)),
                ('timestamp', models.BigIntegerField()),
                ('icon', models.SmallIntegerField()),
                ('replycount', models.SmallIntegerField()),
                ('startpost', models.TextField()),
                ('guildid', models.IntegerField()),
                ('localthreadid', models.IntegerField()),
            ],
            options={
                'db_table': 'bbs_threads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Buddies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('buddyid', models.IntegerField()),
                ('pending', models.IntegerField()),
                ('group', models.CharField(max_length=17, null=True, blank=True)),
            ],
            options={
                'db_table': 'buddies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Characters',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('accountid', models.IntegerField()),
                ('world', models.IntegerField()),
                ('name', models.CharField(max_length=13)),
                ('level', models.IntegerField()),
                ('exp', models.IntegerField()),
                ('gachaexp', models.IntegerField()),
                ('str', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('luk', models.IntegerField()),
                ('int', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('maxhp', models.IntegerField()),
                ('maxmp', models.IntegerField()),
                ('meso', models.IntegerField()),
                ('hpmpused', models.IntegerField(db_column='hpMpUsed')),
                ('job', models.IntegerField()),
                ('skincolor', models.IntegerField()),
                ('gender', models.IntegerField()),
                ('fame', models.IntegerField()),
                ('hair', models.IntegerField()),
                ('face', models.IntegerField()),
                ('ap', models.IntegerField()),
                ('sp', models.IntegerField()),
                ('map', models.IntegerField()),
                ('spawnpoint', models.IntegerField()),
                ('gm', models.IntegerField()),
                ('party', models.IntegerField()),
                ('buddycapacity', models.IntegerField(db_column='buddyCapacity')),
                ('createdate', models.DateTimeField()),
                ('rank', models.IntegerField()),
                ('rankmove', models.IntegerField(db_column='rankMove')),
                ('jobrank', models.IntegerField(db_column='jobRank')),
                ('jobrankmove', models.IntegerField(db_column='jobRankMove')),
                ('guildid', models.IntegerField()),
                ('guildrank', models.IntegerField()),
                ('messengerid', models.IntegerField()),
                ('messengerposition', models.IntegerField()),
                ('mountlevel', models.IntegerField()),
                ('mountexp', models.IntegerField()),
                ('mounttiredness', models.IntegerField()),
                ('omokwins', models.IntegerField()),
                ('omoklosses', models.IntegerField()),
                ('omokties', models.IntegerField()),
                ('matchcardwins', models.IntegerField()),
                ('matchcardlosses', models.IntegerField()),
                ('matchcardties', models.IntegerField()),
                ('merchantmesos', models.IntegerField(null=True, db_column='MerchantMesos', blank=True)),
                ('hasmerchant', models.IntegerField(null=True, db_column='HasMerchant', blank=True)),
                ('equipslots', models.IntegerField()),
                ('useslots', models.IntegerField()),
                ('setupslots', models.IntegerField()),
                ('etcslots', models.IntegerField()),
                ('familyid', models.IntegerField(db_column='familyId')),
                ('monsterbookcover', models.IntegerField()),
                ('alliancerank', models.IntegerField(db_column='allianceRank')),
                ('vanquisherstage', models.IntegerField(db_column='vanquisherStage')),
                ('dojopoints', models.IntegerField(db_column='dojoPoints')),
                ('lastdojostage', models.IntegerField(db_column='lastDojoStage')),
                ('finisheddojotutorial', models.IntegerField(db_column='finishedDojoTutorial')),
                ('vanquisherkills', models.IntegerField(db_column='vanquisherKills')),
                ('summonvalue', models.IntegerField(db_column='summonValue')),
            ],
            options={
                'db_table': 'characters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cooldowns',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('charid', models.IntegerField()),
                ('skillid', models.IntegerField(db_column='SkillID')),
                ('length', models.BigIntegerField()),
                ('starttime', models.BigIntegerField(db_column='StartTime')),
            ],
            options={
                'db_table': 'cooldowns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DropData',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('dropperid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('minimum_quantity', models.IntegerField()),
                ('maximum_quantity', models.IntegerField()),
                ('questid', models.IntegerField()),
                ('chance', models.IntegerField()),
            ],
            options={
                'db_table': 'drop_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DropDataGlobal',
            fields=[
                ('id', models.BigIntegerField(serialize=False, primary_key=True)),
                ('continent', models.IntegerField()),
                ('droptype', models.IntegerField(db_column='dropType')),
                ('itemid', models.IntegerField()),
                ('minimum_quantity', models.IntegerField()),
                ('maximum_quantity', models.IntegerField()),
                ('questid', models.IntegerField()),
                ('chance', models.IntegerField()),
                ('comments', models.CharField(max_length=45, null=True, blank=True)),
            ],
            options={
                'db_table': 'drop_data_global',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dueyitems',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('itemid', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('upgradeslots', models.IntegerField(null=True, blank=True)),
                ('level', models.IntegerField(null=True, blank=True)),
                ('str', models.IntegerField(null=True, blank=True)),
                ('dex', models.IntegerField(null=True, blank=True)),
                ('int', models.IntegerField(null=True, blank=True)),
                ('luk', models.IntegerField(null=True, blank=True)),
                ('hp', models.IntegerField(null=True, blank=True)),
                ('mp', models.IntegerField(null=True, blank=True)),
                ('watk', models.IntegerField(null=True, blank=True)),
                ('matk', models.IntegerField(null=True, blank=True)),
                ('wdef', models.IntegerField(null=True, blank=True)),
                ('mdef', models.IntegerField(null=True, blank=True)),
                ('acc', models.IntegerField(null=True, blank=True)),
                ('avoid', models.IntegerField(null=True, blank=True)),
                ('hands', models.IntegerField(null=True, blank=True)),
                ('speed', models.IntegerField(null=True, blank=True)),
                ('jump', models.IntegerField(null=True, blank=True)),
                ('owner', models.CharField(max_length=13, null=True, blank=True)),
            ],
            options={
                'db_table': 'dueyitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dueypackages',
            fields=[
                ('packageid', models.AutoField(serialize=False, primary_key=True, db_column='PackageId')),
                ('recieverid', models.IntegerField(db_column='RecieverId')),
                ('sendername', models.CharField(max_length=13, db_column='SenderName')),
                ('mesos', models.IntegerField(null=True, db_column='Mesos', blank=True)),
                ('timestamp', models.CharField(max_length=10, db_column='TimeStamp')),
                ('checked', models.IntegerField(null=True, db_column='Checked', blank=True)),
                ('type', models.IntegerField(db_column='Type')),
            ],
            options={
                'db_table': 'dueypackages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventstats',
            fields=[
                ('characterid', models.IntegerField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=11)),
                ('info', models.IntegerField()),
            ],
            options={
                'db_table': 'eventstats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Famelog',
            fields=[
                ('famelogid', models.AutoField(serialize=False, primary_key=True)),
                ('characterid_to', models.IntegerField()),
                ('when', models.DateTimeField()),
            ],
            options={
                'db_table': 'famelog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FamilyCharacter',
            fields=[
                ('cid', models.IntegerField(serialize=False, primary_key=True)),
                ('familyid', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('reputation', models.IntegerField()),
                ('todaysrep', models.IntegerField()),
                ('totaljuniors', models.IntegerField()),
                ('name', models.CharField(max_length=255)),
                ('juniorsadded', models.IntegerField()),
                ('totalreputation', models.IntegerField()),
            ],
            options={
                'db_table': 'family_character',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gifts',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('from_field', models.CharField(max_length=13, db_column='from')),
                ('message', models.TextField()),
                ('sn', models.IntegerField()),
                ('ringid', models.IntegerField()),
            ],
            options={
                'db_table': 'gifts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gmlog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('cid', models.IntegerField()),
                ('command', models.TextField()),
                ('when', models.DateTimeField()),
            ],
            options={
                'db_table': 'gmlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Guilds',
            fields=[
                ('guildid', models.AutoField(serialize=False, primary_key=True)),
                ('leader', models.IntegerField()),
                ('gp', models.IntegerField(db_column='GP')),
                ('logo', models.IntegerField(null=True, blank=True)),
                ('logocolor', models.SmallIntegerField(db_column='logoColor')),
                ('name', models.CharField(max_length=45)),
                ('rank1title', models.CharField(max_length=45)),
                ('rank2title', models.CharField(max_length=45)),
                ('rank3title', models.CharField(max_length=45)),
                ('rank4title', models.CharField(max_length=45)),
                ('rank5title', models.CharField(max_length=45)),
                ('capacity', models.IntegerField()),
                ('logobg', models.IntegerField(null=True, db_column='logoBG', blank=True)),
                ('logobgcolor', models.SmallIntegerField(db_column='logoBGColor')),
                ('notice', models.CharField(max_length=101, null=True, blank=True)),
                ('signature', models.IntegerField()),
                ('allianceid', models.IntegerField(db_column='allianceId')),
            ],
            options={
                'db_table': 'guilds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hiredmerchant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ownerid', models.IntegerField(null=True, blank=True)),
                ('itemid', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('upgradeslots', models.IntegerField(null=True, blank=True)),
                ('level', models.IntegerField(null=True, blank=True)),
                ('str', models.IntegerField(null=True, blank=True)),
                ('dex', models.IntegerField(null=True, blank=True)),
                ('int', models.IntegerField(null=True, blank=True)),
                ('luk', models.IntegerField(null=True, blank=True)),
                ('hp', models.IntegerField(null=True, blank=True)),
                ('mp', models.IntegerField(null=True, blank=True)),
                ('watk', models.IntegerField(null=True, blank=True)),
                ('matk', models.IntegerField(null=True, blank=True)),
                ('wdef', models.IntegerField(null=True, blank=True)),
                ('mdef', models.IntegerField(null=True, blank=True)),
                ('acc', models.IntegerField(null=True, blank=True)),
                ('avoid', models.IntegerField(null=True, blank=True)),
                ('hands', models.IntegerField(null=True, blank=True)),
                ('speed', models.IntegerField(null=True, blank=True)),
                ('jump', models.IntegerField(null=True, blank=True)),
                ('owner', models.CharField(max_length=13, null=True, blank=True)),
                ('type', models.IntegerField()),
            ],
            options={
                'db_table': 'hiredmerchant',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Htsquads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('channel', models.IntegerField()),
                ('leaderid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('members', models.IntegerField()),
            ],
            options={
                'db_table': 'htsquads',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryequipment',
            fields=[
                ('inventoryequipmentid', models.AutoField(serialize=False, primary_key=True)),
                ('upgradeslots', models.IntegerField()),
                ('level', models.IntegerField()),
                ('str', models.IntegerField()),
                ('dex', models.IntegerField()),
                ('int', models.IntegerField()),
                ('luk', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('mp', models.IntegerField()),
                ('watk', models.IntegerField()),
                ('matk', models.IntegerField()),
                ('wdef', models.IntegerField()),
                ('mdef', models.IntegerField()),
                ('acc', models.IntegerField()),
                ('avoid', models.IntegerField()),
                ('hands', models.IntegerField()),
                ('speed', models.IntegerField()),
                ('jump', models.IntegerField()),
                ('locked', models.IntegerField()),
                ('vicious', models.IntegerField()),
                ('itemlevel', models.IntegerField()),
                ('itemexp', models.IntegerField()),
                ('ringid', models.IntegerField()),
            ],
            options={
                'db_table': 'inventoryequipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inventoryitems',
            fields=[
                ('inventoryitemid', models.AutoField(serialize=False, primary_key=True)),
                ('type', models.IntegerField()),
                ('accountid', models.IntegerField(null=True, blank=True)),
                ('itemid', models.IntegerField()),
                ('inventorytype', models.IntegerField()),
                ('position', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('owner', models.TextField()),
                ('petid', models.IntegerField()),
                ('flag', models.IntegerField()),
                ('expiration', models.BigIntegerField()),
                ('giftfrom', models.CharField(max_length=26, db_column='giftFrom')),
            ],
            options={
                'db_table': 'inventoryitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ipbans',
            fields=[
                ('ipbanid', models.AutoField(serialize=False, primary_key=True)),
                ('ip', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'ipbans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Iplog',
            fields=[
                ('iplogid', models.AutoField(serialize=False, primary_key=True)),
                ('ip', models.CharField(max_length=30)),
                ('login', models.DateTimeField()),
            ],
            options={
                'db_table': 'iplog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Keymap',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('key', models.IntegerField()),
                ('type', models.IntegerField()),
                ('action', models.IntegerField()),
            ],
            options={
                'db_table': 'keymap',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Macbans',
            fields=[
                ('macbanid', models.AutoField(serialize=False, primary_key=True)),
                ('mac', models.CharField(unique=True, max_length=30)),
            ],
            options={
                'db_table': 'macbans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Macfilters',
            fields=[
                ('macfilterid', models.AutoField(serialize=False, primary_key=True)),
                ('filter', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'macfilters',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Makercreatedata',
            fields=[
                ('itemid', models.IntegerField(serialize=False, primary_key=True)),
                ('req_level', models.IntegerField()),
                ('req_maker_level', models.IntegerField()),
                ('req_meso', models.IntegerField()),
                ('req_item', models.IntegerField()),
                ('req_equip', models.IntegerField()),
                ('catalyst', models.IntegerField()),
                ('quantity', models.SmallIntegerField()),
                ('tuc', models.IntegerField()),
            ],
            options={
                'db_table': 'makercreatedata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Makerrecipedata',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('itemid', models.IntegerField()),
                ('req_item', models.IntegerField()),
                ('count', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'makerrecipedata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Makerrewarddata',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('itemid', models.IntegerField()),
                ('rewardid', models.IntegerField()),
                ('quantity', models.SmallIntegerField()),
                ('prob', models.IntegerField()),
            ],
            options={
                'db_table': 'makerrewarddata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Marriages',
            fields=[
                ('marriageid', models.AutoField(serialize=False, primary_key=True)),
                ('husbandid', models.IntegerField()),
                ('wifeid', models.IntegerField()),
            ],
            options={
                'db_table': 'marriages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medalmaps',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('mapid', models.IntegerField()),
            ],
            options={
                'db_table': 'medalmaps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Monsterbook',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('charid', models.IntegerField()),
                ('cardid', models.IntegerField()),
                ('level', models.IntegerField(null=True, blank=True)),
            ],
            options={
                'db_table': 'monsterbook',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Monstercarddata',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('cardid', models.IntegerField()),
                ('mobid', models.IntegerField()),
            ],
            options={
                'db_table': 'monstercarddata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MtsCart',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('cid', models.IntegerField()),
                ('itemid', models.IntegerField()),
            ],
            options={
                'db_table': 'mts_cart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MtsItems',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('tab', models.IntegerField()),
                ('type', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('seller', models.IntegerField()),
                ('price', models.IntegerField()),
                ('bid_incre', models.IntegerField(null=True, blank=True)),
                ('buy_now', models.IntegerField(null=True, blank=True)),
                ('position', models.IntegerField(null=True, blank=True)),
                ('upgradeslots', models.IntegerField(null=True, blank=True)),
                ('level', models.IntegerField(null=True, blank=True)),
                ('str', models.IntegerField(null=True, blank=True)),
                ('dex', models.IntegerField(null=True, blank=True)),
                ('int', models.IntegerField(null=True, blank=True)),
                ('luk', models.IntegerField(null=True, blank=True)),
                ('hp', models.IntegerField(null=True, blank=True)),
                ('mp', models.IntegerField(null=True, blank=True)),
                ('watk', models.IntegerField(null=True, blank=True)),
                ('matk', models.IntegerField(null=True, blank=True)),
                ('wdef', models.IntegerField(null=True, blank=True)),
                ('mdef', models.IntegerField(null=True, blank=True)),
                ('acc', models.IntegerField(null=True, blank=True)),
                ('avoid', models.IntegerField(null=True, blank=True)),
                ('hands', models.IntegerField(null=True, blank=True)),
                ('speed', models.IntegerField(null=True, blank=True)),
                ('jump', models.IntegerField(null=True, blank=True)),
                ('locked', models.IntegerField(null=True, blank=True)),
                ('isequip', models.IntegerField(null=True, blank=True)),
                ('owner', models.CharField(max_length=16, null=True, blank=True)),
                ('sellername', models.CharField(max_length=16)),
                ('sell_ends', models.CharField(max_length=16)),
                ('transfer', models.IntegerField(null=True, blank=True)),
                ('vicious', models.IntegerField()),
                ('flag', models.IntegerField()),
            ],
            options={
                'db_table': 'mts_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notes',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('to', models.CharField(max_length=13)),
                ('from_field', models.CharField(max_length=13, db_column='from')),
                ('message', models.TextField()),
                ('timestamp', models.BigIntegerField()),
                ('fame', models.IntegerField()),
                ('deleted', models.IntegerField()),
            ],
            options={
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nxcode',
            fields=[
                ('code', models.CharField(max_length=15, serialize=False, primary_key=True)),
                ('valid', models.IntegerField()),
                ('user', models.CharField(max_length=13, null=True, blank=True)),
                ('type', models.IntegerField()),
                ('item', models.IntegerField()),
            ],
            options={
                'db_table': 'nxcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pets',
            fields=[
                ('petid', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=13, null=True, blank=True)),
                ('level', models.IntegerField()),
                ('closeness', models.IntegerField()),
                ('fullness', models.IntegerField()),
                ('summoned', models.IntegerField()),
            ],
            options={
                'db_table': 'pets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playernpcs',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=13)),
                ('hair', models.IntegerField()),
                ('face', models.IntegerField()),
                ('skin', models.IntegerField()),
                ('x', models.IntegerField()),
                ('cy', models.IntegerField()),
                ('map', models.IntegerField()),
                ('gender', models.IntegerField()),
                ('dir', models.IntegerField()),
                ('scriptid', models.IntegerField(db_column='ScriptId')),
                ('foothold', models.IntegerField(db_column='Foothold')),
                ('rx0', models.IntegerField()),
                ('rx1', models.IntegerField()),
            ],
            options={
                'db_table': 'playernpcs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayernpcsEquip',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('npcid', models.IntegerField(db_column='NpcId')),
                ('equipid', models.IntegerField()),
                ('type', models.IntegerField()),
                ('equippos', models.IntegerField()),
            ],
            options={
                'db_table': 'playernpcs_equip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questactions',
            fields=[
                ('questactionid', models.AutoField(serialize=False, primary_key=True)),
                ('questid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'questactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questprogress',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('progressid', models.IntegerField()),
                ('progress', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'questprogress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questrequirements',
            fields=[
                ('questrequirementid', models.AutoField(serialize=False, primary_key=True)),
                ('questid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('data', models.TextField()),
            ],
            options={
                'db_table': 'questrequirements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Queststatus',
            fields=[
                ('queststatusid', models.AutoField(serialize=False, primary_key=True)),
                ('quest', models.IntegerField()),
                ('status', models.IntegerField()),
                ('time', models.IntegerField()),
                ('forfeited', models.IntegerField()),
            ],
            options={
                'db_table': 'queststatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reactordrops',
            fields=[
                ('reactordropid', models.AutoField(serialize=False, primary_key=True)),
                ('reactorid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('chance', models.IntegerField()),
                ('questid', models.IntegerField()),
            ],
            options={
                'db_table': 'reactordrops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reports',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('reporttime', models.DateTimeField()),
                ('reporterid', models.IntegerField()),
                ('victimid', models.IntegerField()),
                ('reason', models.IntegerField()),
                ('chatlog', models.TextField()),
                ('status', models.TextField()),
            ],
            options={
                'db_table': 'reports',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Responses',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('chat', models.TextField(null=True, blank=True)),
                ('response', models.TextField(null=True, blank=True)),
            ],
            options={
                'db_table': 'responses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('partnerringid', models.IntegerField(db_column='partnerRingId')),
                ('partnerchrid', models.IntegerField(db_column='partnerChrId')),
                ('itemid', models.IntegerField()),
                ('partnername', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'rings',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Savedlocations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('locationtype', models.CharField(max_length=11)),
                ('map', models.IntegerField()),
                ('portal', models.IntegerField()),
            ],
            options={
                'db_table': 'savedlocations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shopitems',
            fields=[
                ('shopitemid', models.AutoField(serialize=False, primary_key=True)),
                ('shopid', models.IntegerField()),
                ('itemid', models.IntegerField()),
                ('price', models.IntegerField()),
                ('pitch', models.IntegerField()),
                ('position', models.IntegerField()),
            ],
            options={
                'db_table': 'shopitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shops',
            fields=[
                ('shopid', models.AutoField(serialize=False, primary_key=True)),
                ('npcid', models.IntegerField()),
            ],
            options={
                'db_table': 'shops',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skillmacros',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('characterid', models.IntegerField()),
                ('position', models.IntegerField()),
                ('skill1', models.IntegerField()),
                ('skill2', models.IntegerField()),
                ('skill3', models.IntegerField()),
                ('name', models.CharField(max_length=13, null=True, blank=True)),
                ('shout', models.IntegerField()),
            ],
            options={
                'db_table': 'skillmacros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('skillid', models.IntegerField()),
                ('skilllevel', models.IntegerField()),
                ('masterlevel', models.IntegerField()),
                ('expiration', models.BigIntegerField()),
            ],
            options={
                'db_table': 'skills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Specialcashitems',
            fields=[
                ('id', models.IntegerField(serialize=False, primary_key=True)),
                ('sn', models.IntegerField()),
                ('modifier', models.IntegerField()),
                ('info', models.IntegerField()),
            ],
            options={
                'db_table': 'specialcashitems',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Storages',
            fields=[
                ('storageid', models.AutoField(serialize=False, primary_key=True)),
                ('world', models.IntegerField()),
                ('slots', models.IntegerField()),
                ('meso', models.IntegerField()),
            ],
            options={
                'db_table': 'storages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Trocklocations',
            fields=[
                ('trockid', models.AutoField(serialize=False, primary_key=True)),
                ('mapid', models.IntegerField()),
                ('vip', models.IntegerField()),
            ],
            options={
                'db_table': 'trocklocations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Wishlists',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('charid', models.IntegerField()),
                ('sn', models.IntegerField()),
            ],
            options={
                'db_table': 'wishlists',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zaksquads',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('channel', models.IntegerField()),
                ('leaderid', models.IntegerField()),
                ('status', models.IntegerField()),
                ('members', models.IntegerField()),
            ],
            options={
                'db_table': 'zaksquads',
                'managed': False,
            },
        ),
    ]
